# ===========================================
# CONFIGURAÇÃO DO TREINADOR DE QUESTÕES
# ===========================================

# ⚠️ IMPORTANTE: Renomeie este arquivo para .env
# e configure com seus dados reais

# ===========================================
# BANCO DE DADOS POSTGRESQL (OBRIGATÓRIO)
# ===========================================

# URL completa do banco PostgreSQL
# Formato: postgresql://usuario:senha@host:porta/database
DATABASE_URL=postgresql://postgres:senha123@localhost:5432/treinador_questoes

# Configurações específicas do PostgreSQL
PGHOST=localhost
PGPORT=5432
PGUSER=postgres
PGPASSWORD=senha123
PGDATABASE=treinador_questoes

# ===========================================
# EXEMPLOS PARA DIFERENTES PROVEDORES
# ===========================================

# Para Neon.tech (recomendado):
# DATABASE_URL=postgresql://usuario:senha@ep-host.neon.tech/database?sslmode=require

# Para Supabase:
# DATABASE_URL=postgresql://postgres:senha@db.projeto.supabase.co:5432/postgres

# Para Railway:
# DATABASE_URL=postgresql://postgres:senha@containers.railway.app:5432/railway

# ===========================================
# CONFIGURAÇÕES OPCIONAIS
# ===========================================

# Chave secreta para sessões (será gerada automaticamente se não fornecida)
# Use uma string longa e aleatória para produção
SESSION_SECRET=minha_chave_secreta_super_longa_e_aleatoria_para_sessoes

# Ambiente (development/production)
NODE_ENV=development

# ===========================================
# INSTRUÇÕES
# ===========================================

# 1. Renomeie este arquivo para .env
# 2. Configure DATABASE_URL com seus dados do PostgreSQL
# 3. Execute: npm run db:push
# 4. Execute: npm run dev
# 5. Acesse: http://localhost:5000

# ===========================================
# SEGURANÇA
# ===========================================

# ⚠️ NUNCA comite o arquivo .env no Git
# ⚠️ Use senhas fortes em produção
# ⚠️ Use SSL (sslmode=require) em produção