@echo off
REM =======================================================
REM SCRIPT AUTOM√ÅTICO PARA GITHUB - TREINADOR DE QUEST√ïES
REM =======================================================

echo üöÄ Iniciando setup do reposit√≥rio GitHub...

REM Verificar se est√° na pasta correta
if not exist "package.json" (
    echo ‚ùå Execute este script na pasta raiz do projeto!
    pause
    exit /b 1
)

REM Verificar se git est√° instalado
git --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Git n√£o est√° instalado! Instale em: https://git-scm.com
    pause
    exit /b 1
)

REM Verificar se GitHub CLI est√° instalado
gh --version >nul 2>&1
if errorlevel 1 (
    echo ‚ö†Ô∏è  GitHub CLI n√£o encontrado. Instala√ß√£o manual ser√° necess√°ria.
    set HAS_GH_CLI=false
) else (
    echo üîë GitHub CLI detectado!
    set HAS_GH_CLI=true
)

echo.
echo üìã CONFIGURA√á√ÉO DO REPOSIT√ìRIO
echo ==============================
echo Nome do reposit√≥rio: TreinadorDeQuestoes
echo Usu√°rio GitHub: MatheusGino71
echo Descri√ß√£o: Sistema gamificado de treinamento para quest√µes jur√≠dicas
echo.

REM Limpar git anterior se existir
if exist ".git" (
    echo ‚ö†Ô∏è  Removendo configura√ß√£o git anterior...
    rmdir /s /q .git
)

REM Inicializar git
echo ‚ÑπÔ∏è  Inicializando reposit√≥rio Git...
git init

REM Configurar usu√°rio
echo.
echo üîß CONFIGURA√á√ÉO DO GIT
echo =====================
set /p GIT_NAME="Digite seu nome para o Git: "
set /p GIT_EMAIL="Digite seu email do GitHub: "

git config user.name "%GIT_NAME%"
git config user.email "%GIT_EMAIL%"

echo ‚úÖ Configura√ß√£o do Git conclu√≠da

REM Criar .gitignore se n√£o existir
if not exist ".gitignore" (
    echo ‚ÑπÔ∏è  Criando .gitignore...
    (
        echo # Dependencies
        echo node_modules/
        echo npm-debug.log*
        echo yarn-debug.log*
        echo yarn-error.log*
        echo.
        echo # Production builds
        echo dist/
        echo build/
        echo.
        echo # Environment variables
        echo .env
        echo .env.local
        echo .env.development.local
        echo .env.test.local
        echo .env.production.local
        echo.
        echo # Editor directories and files
        echo .vscode/
        echo .idea/
        echo *.swp
        echo *.swo
        echo.
        echo # OS generated files
        echo .DS_Store
        echo Thumbs.db
        echo.
        echo # Runtime files
        echo *.log
        echo *.pid
        echo.
        echo # Replit specific
        echo .replit
        echo replit.nix
        echo.
        echo # Database files
        echo *.db
        echo *.sqlite
        echo.
        echo # Temporary files
        echo *.tmp
        echo *.temp
        echo.
        echo # Python cache
        echo __pycache__/
        echo *.py[cod]
        echo.
        echo # Package files
        echo *.tgz
        echo *.tar.gz
        echo.
        echo # TypeScript cache
        echo *.tsbuildinfo
    ) > .gitignore
)

REM Adicionar arquivos
echo ‚ÑπÔ∏è  Adicionando arquivos ao reposit√≥rio...
git add .

REM Fazer commit inicial
echo ‚ÑπÔ∏è  Fazendo commit inicial...
git commit -m "Initial commit: Treinador de Quest√µes - Sistema completo

‚úÖ Sistema de autentica√ß√£o completo com login/registro
‚úÖ 531 quest√µes reais (450 OAB + 81 Concursos) 
‚úÖ Gamifica√ß√£o: 3 vidas, power-ups, pontua√ß√£o
‚úÖ 20 quest√µes por sess√£o com sele√ß√£o aleat√≥ria
‚úÖ Estat√≠sticas detalhadas com an√°lise de erros/acertos
‚úÖ Interface responsiva com tema escuro
‚úÖ PostgreSQL + Drizzle ORM
‚úÖ React + TypeScript + Tailwind CSS
‚úÖ Documenta√ß√£o completa para setup local
‚úÖ Powered by BIPETech"

echo ‚úÖ Commit realizado com sucesso!

REM Configurar branch main
git branch -M main

echo.
echo üåê CRIA√á√ÉO DO REPOSIT√ìRIO NO GITHUB
echo ====================================

if "%HAS_GH_CLI%"=="true" (
    echo ‚ÑπÔ∏è  Usando GitHub CLI para criar reposit√≥rio...
    
    REM Verificar login
    gh auth status >nul 2>&1
    if errorlevel 1 (
        echo ‚ö†Ô∏è  Fa√ßa login no GitHub CLI primeiro:
        echo gh auth login
        pause
        exit /b 1
    )
    
    REM Criar reposit√≥rio
    gh repo create MatheusGino71/TreinadorDeQuestoes --description "Sistema gamificado de treinamento para quest√µes jur√≠dicas - OAB e Concursos" --public --source=. --remote=origin --push
    
    if errorlevel 1 (
        echo ‚ùå Erro ao criar reposit√≥rio via GitHub CLI
    ) else (
        echo ‚úÖ Reposit√≥rio criado e enviado com sucesso!
        echo.
        echo üîó Acesse seu reposit√≥rio em:
        echo    https://github.com/MatheusGino71/TreinadorDeQuestoes
    )
    
) else (
    echo ‚ö†Ô∏è  Cria√ß√£o manual necess√°ria!
    echo.
    echo üìù PASSOS MANUAIS:
    echo ==================
    echo 1. Acesse: https://github.com/new
    echo 2. Repository name: TreinadorDeQuestoes
    echo 3. Description: Sistema gamificado de treinamento para quest√µes jur√≠dicas - OAB e Concursos
    echo 4. Marque como Public
    echo 5. N√ÉO adicione README, .gitignore ou license (j√° temos)
    echo 6. Clique em 'Create repository'
    echo.
    echo üì§ DEPOIS DE CRIAR, os comandos abaixo ser√£o executados automaticamente:
    echo ====================================================================
    echo git remote add origin https://github.com/MatheusGino71/TreinadorDeQuestoes.git
    echo git push -u origin main
    echo.
    
    pause
    
    REM Adicionar remote
    git remote add origin https://github.com/MatheusGino71/TreinadorDeQuestoes.git
    
    REM Push para GitHub
    echo ‚ÑπÔ∏è  Enviando c√≥digo para GitHub...
    git push -u origin main
    
    if errorlevel 1 (
        echo ‚ùå Erro ao enviar c√≥digo. Verifique se o reposit√≥rio foi criado corretamente.
    ) else (
        echo ‚úÖ C√≥digo enviado com sucesso!
    )
)

echo.
echo üéâ SETUP CONCLU√çDO!
echo ===================
echo.
echo ‚úÖ Reposit√≥rio GitHub configurado
echo ‚úÖ Documenta√ß√£o completa inclu√≠da
echo ‚úÖ Projeto pronto para deploy
echo.
echo üìö PR√ìXIMOS PASSOS:
echo ==================
echo ‚Ä¢ Para rodar localmente: ver SETUP_LOCAL.md
echo ‚Ä¢ Para fazer deploy: ver DEPLOY_INSTRUCTIONS.md
echo ‚Ä¢ Reposit√≥rio: https://github.com/MatheusGino71/TreinadorDeQuestoes
echo.
echo Powered by BIPETech üöÄ

pause